1. Use set -o errexit (a.k.a. set -e) to make your script exit when a command fails.
   Then add || true to commands that you allow to fail.

2. Use set -o nounset (a.k.a. set -u) to exit when your script tries to use undeclared variables.

3. Use set -o xtrace (a.k.a set -x) to trace what gets executed. Useful for debugging.

4. Surround your variables with {}. Otherwise bash will try to access the $ENVIRONMENT_app variable in /srv/$ENVIRONMENT_app, whereas you probably intended /srv/${ENVIRONMENT}_app.

5. You don't need two equal signs when checking if [ "${NAME}" = "Kevin" ].

6. Surround your variable with " in if [ "${NAME}" = "Kevin" ], because if $NAME isn't declared, bash will throw a syntax error (also see nounset).

7. Set magic variables for current file, basename, and directory at the top of your script for convenience.

	#!/usr/bin/env bash
	# Bash3 Boilerplate. Copyright (c) 2014, kvz.io

	set -o errexit
	set -o pipefail
	set -o nounset
	# set -o xtrace

	# Set magic variables for current file & dir
	__dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
	__root="$(cd "$(dirname "${__dir}")" && pwd)" # <-- change this
	__file="${__dir}/$(basename "${BASH_SOURCE[0]}")"
	__base="$(basename ${__file} .sh)"

	arg1="${1:-}"

8. 
	find out/target/common -name classes-full-debug.jar

	date -r ${MY_FILE_VARIABLE}

	stat -c %Y ${MY_FILE_VARIABLE}
	   e.g. stat -c %Y ccienv/findbugs/output.csv
9. Learn less, do more: 做中學 , 更有感覺
   Try at the command prompt: 簡單點 , 避免干擾.
   Keep big files in mind: 想多點 , 不要頭痛醫頭.
   Try different ways always: 


10. 只要你編輯完 /etc/crontab 這個檔案，並且將他儲存之後，那麼 cron 的設定就自動的會來執行了！
